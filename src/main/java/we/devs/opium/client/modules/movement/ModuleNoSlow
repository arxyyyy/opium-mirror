package we.devs.opium.client.modules.movement;

import net.fabricmc.fabric.api.client.event.lifecycle.v1.ClientTickEvents;
import net.minecraft.client.MinecraftClient;
import net.minecraft.item.Items;
import we.devs.opium.client.AfgannistanClient.Module;

public class NoSlowModule extends Module {
    private final Mode mode = Mode.NCP; 
    private final int speed = 100; 

    private final MinecraftClient client = MinecraftClient.getInstance();

    public NoSlowModule() {
        super("NoSlow");
    }

    @Override
    protected void onEnable() {
        ClientTickEvents.END_CLIENT_TICK.register(client -> {
            if (client.player == null || client.world == null) return;

            if (client.player.isUsingItem() && !client.player.hasVehicle()) {
                client.player.input.movementForward *= (5.0F * speed / 100.0F);
                client.player.input.movementSideways *= (5.0F * speed / 100.0F);

                if (mode == Mode.StrictNCP || mode == Mode.NCP) {
                    if (!client.player.isSneaking()) {
                        if (mode == Mode.StrictNCP &&
                            (client.player.getMainHandStack().isOf(Items.APPLE) ||
                             client.player.getOffHandStack().isOf(Items.APPLE))) {
                        }
                        client.player.input.movementForward /= 0.20F;
                        client.player.input.movementSideways /= 0.20F;
                    }
                }

                if (mode == Mode.Matrix && client.player.isUsingItem()) {
                    if (client.player.isOnGround() && !client.options.jumpKey.isPressed()) {
                        if (client.player.age % 2 == 0) {
                            client.player.setVelocity(client.player.getVelocity().x * 0.46D,
                                                      client.player.getVelocity().y,
                                                      client.player.getVelocity().z * 0.46D);
                        }
                    } else if (client.player.fallDistance > 0.2F) {
                        client.player.setVelocity(client.player.getVelocity().x * 0.91D,
                                                  client.player.getVelocity().y,
                                                  client.player.getVelocity().z * 0.91D);
                    }
                }
            }
        });
    }

    @Override
    protected void onDisable() {
        ClientTickEvents.END_CLIENT_TICK.unregister(client -> {});
    }

    public enum Mode {
        NCP, StrictNCP, Matrix;
    }
}
